// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Contains interface-independent options affecting the network configuration in general.
 *
 * ## Import
 *
 * There should only be one `network.globals` config. It seems to default to the UCI name of `globals`.
 *
 * ```sh
 *  $ pulumi import openwrt:index/networkGlobals:NetworkGlobals this globals
 * ```
 */
export class NetworkGlobals extends pulumi.CustomResource {
    /**
     * Get an existing NetworkGlobals resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkGlobalsState, opts?: pulumi.CustomResourceOptions): NetworkGlobals {
        return new NetworkGlobals(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'openwrt:index/networkGlobals:NetworkGlobals';

    /**
     * Returns true if the given object is an instance of NetworkGlobals.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkGlobals {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkGlobals.__pulumiType;
    }

    /**
     * Use every CPU to handle packet traffic.
     */
    public readonly packetSteering!: pulumi.Output<boolean>;
    /**
     * IPv6 ULA prefix for this device.
     */
    public readonly ulaPrefix!: pulumi.Output<string>;

    /**
     * Create a NetworkGlobals resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NetworkGlobalsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkGlobalsArgs | NetworkGlobalsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkGlobalsState | undefined;
            resourceInputs["packetSteering"] = state ? state.packetSteering : undefined;
            resourceInputs["ulaPrefix"] = state ? state.ulaPrefix : undefined;
        } else {
            const args = argsOrState as NetworkGlobalsArgs | undefined;
            resourceInputs["packetSteering"] = args ? args.packetSteering : undefined;
            resourceInputs["ulaPrefix"] = args ? args.ulaPrefix : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkGlobals.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkGlobals resources.
 */
export interface NetworkGlobalsState {
    /**
     * Use every CPU to handle packet traffic.
     */
    packetSteering?: pulumi.Input<boolean>;
    /**
     * IPv6 ULA prefix for this device.
     */
    ulaPrefix?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkGlobals resource.
 */
export interface NetworkGlobalsArgs {
    /**
     * Use every CPU to handle packet traffic.
     */
    packetSteering?: pulumi.Input<boolean>;
    /**
     * IPv6 ULA prefix for this device.
     */
    ulaPrefix?: pulumi.Input<string>;
}
