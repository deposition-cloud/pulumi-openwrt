// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides system data about an OpenWrt device
 *
 * ## Import
 *
 * Every `system.system` seems to have the same UCI name of `cfg01e48a`
 *
 * ```sh
 *  $ pulumi import openwrt:index/systemSystem:SystemSystem this cfg01e48a
 * ```
 */
export class SystemSystem extends pulumi.CustomResource {
    /**
     * Get an existing SystemSystem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemSystemState, opts?: pulumi.CustomResourceOptions): SystemSystem {
        return new SystemSystem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'openwrt:index/systemSystem:SystemSystem';

    /**
     * Returns true if the given object is an instance of SystemSystem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemSystem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemSystem.__pulumiType;
    }

    /**
     * The maximum log level for kernel messages to be logged to the console.
     */
    public readonly conloglevel!: pulumi.Output<number>;
    /**
     * The minimum level for cron messages to be logged to syslog.
     */
    public readonly cronloglevel!: pulumi.Output<number>;
    /**
     * The hostname for the system.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * A short single-line description for the system.
     */
    public readonly hostname!: pulumi.Output<string>;
    /**
     * Size of the file based log buffer in KiB.
     */
    public readonly logSize!: pulumi.Output<number>;
    /**
     * Multi-line free-form text about the system.
     */
    public readonly notes!: pulumi.Output<string>;
    /**
     * The POSIX.1 time zone string. This has no corresponding value in LuCI. See: https://github.com/openwrt/luci/blob/cd82ccacef78d3bb8b8af6b87dabb9e892e2b2aa/modules/luci-base/luasrc/sys/zoneinfo/tzdata.lua.
     */
    public readonly timezone!: pulumi.Output<string>;
    /**
     * Require authentication for local users to log in the system.
     */
    public readonly ttylogin!: pulumi.Output<boolean>;
    /**
     * The IANA/Olson time zone string. This corresponds to "Timezone" in LuCI. See: https://github.com/openwrt/luci/blob/cd82ccacef78d3bb8b8af6b87dabb9e892e2b2aa/modules/luci-base/luasrc/sys/zoneinfo/tzdata.lua.
     */
    public readonly zonename!: pulumi.Output<string>;

    /**
     * Create a SystemSystem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemSystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemSystemArgs | SystemSystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemSystemState | undefined;
            resourceInputs["conloglevel"] = state ? state.conloglevel : undefined;
            resourceInputs["cronloglevel"] = state ? state.cronloglevel : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["logSize"] = state ? state.logSize : undefined;
            resourceInputs["notes"] = state ? state.notes : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["ttylogin"] = state ? state.ttylogin : undefined;
            resourceInputs["zonename"] = state ? state.zonename : undefined;
        } else {
            const args = argsOrState as SystemSystemArgs | undefined;
            resourceInputs["conloglevel"] = args ? args.conloglevel : undefined;
            resourceInputs["cronloglevel"] = args ? args.cronloglevel : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["logSize"] = args ? args.logSize : undefined;
            resourceInputs["notes"] = args ? args.notes : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["ttylogin"] = args ? args.ttylogin : undefined;
            resourceInputs["zonename"] = args ? args.zonename : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemSystem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemSystem resources.
 */
export interface SystemSystemState {
    /**
     * The maximum log level for kernel messages to be logged to the console.
     */
    conloglevel?: pulumi.Input<number>;
    /**
     * The minimum level for cron messages to be logged to syslog.
     */
    cronloglevel?: pulumi.Input<number>;
    /**
     * The hostname for the system.
     */
    description?: pulumi.Input<string>;
    /**
     * A short single-line description for the system.
     */
    hostname?: pulumi.Input<string>;
    /**
     * Size of the file based log buffer in KiB.
     */
    logSize?: pulumi.Input<number>;
    /**
     * Multi-line free-form text about the system.
     */
    notes?: pulumi.Input<string>;
    /**
     * The POSIX.1 time zone string. This has no corresponding value in LuCI. See: https://github.com/openwrt/luci/blob/cd82ccacef78d3bb8b8af6b87dabb9e892e2b2aa/modules/luci-base/luasrc/sys/zoneinfo/tzdata.lua.
     */
    timezone?: pulumi.Input<string>;
    /**
     * Require authentication for local users to log in the system.
     */
    ttylogin?: pulumi.Input<boolean>;
    /**
     * The IANA/Olson time zone string. This corresponds to "Timezone" in LuCI. See: https://github.com/openwrt/luci/blob/cd82ccacef78d3bb8b8af6b87dabb9e892e2b2aa/modules/luci-base/luasrc/sys/zoneinfo/tzdata.lua.
     */
    zonename?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemSystem resource.
 */
export interface SystemSystemArgs {
    /**
     * The maximum log level for kernel messages to be logged to the console.
     */
    conloglevel?: pulumi.Input<number>;
    /**
     * The minimum level for cron messages to be logged to syslog.
     */
    cronloglevel?: pulumi.Input<number>;
    /**
     * The hostname for the system.
     */
    description?: pulumi.Input<string>;
    /**
     * A short single-line description for the system.
     */
    hostname?: pulumi.Input<string>;
    /**
     * Size of the file based log buffer in KiB.
     */
    logSize?: pulumi.Input<number>;
    /**
     * Multi-line free-form text about the system.
     */
    notes?: pulumi.Input<string>;
    /**
     * The POSIX.1 time zone string. This has no corresponding value in LuCI. See: https://github.com/openwrt/luci/blob/cd82ccacef78d3bb8b8af6b87dabb9e892e2b2aa/modules/luci-base/luasrc/sys/zoneinfo/tzdata.lua.
     */
    timezone?: pulumi.Input<string>;
    /**
     * Require authentication for local users to log in the system.
     */
    ttylogin?: pulumi.Input<boolean>;
    /**
     * The IANA/Olson time zone string. This corresponds to "Timezone" in LuCI. See: https://github.com/openwrt/luci/blob/cd82ccacef78d3bb8b8af6b87dabb9e892e2b2aa/modules/luci-base/luasrc/sys/zoneinfo/tzdata.lua.
     */
    zonename?: pulumi.Input<string>;
}
