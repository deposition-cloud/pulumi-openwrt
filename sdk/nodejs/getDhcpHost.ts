// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Assign a fixed IP address to hosts.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openwrt from "@pulumi/openwrt";
 *
 * const testing = openwrt.getDhcpHost({
 *     id: "testing",
 * });
 * ```
 */
export function getDhcpHost(args: GetDhcpHostArgs, opts?: pulumi.InvokeOptions): Promise<GetDhcpHostResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("openwrt:index/getDhcpHost:getDhcpHost", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getDhcpHost.
 */
export interface GetDhcpHostArgs {
    /**
     * Name of the section. This name is only used when interacting with UCI directly.
     */
    id: string;
}

/**
 * A collection of values returned by getDhcpHost.
 */
export interface GetDhcpHostResult {
    /**
     * Add static forward and reverse DNS entries for this host.
     */
    readonly dns: boolean;
    /**
     * Name of the section. This name is only used when interacting with UCI directly.
     */
    readonly id: string;
    /**
     * The IP address to be used for this host, or `ignore` to ignore any DHCP request from this host.
     */
    readonly ip: string;
    /**
     * The hardware address(es) of this host, separated by spaces.
     */
    readonly mac: string;
    /**
     * Hostname to assign.
     */
    readonly name: string;
}
/**
 * Assign a fixed IP address to hosts.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openwrt from "@pulumi/openwrt";
 *
 * const testing = openwrt.getDhcpHost({
 *     id: "testing",
 * });
 * ```
 */
export function getDhcpHostOutput(args: GetDhcpHostOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDhcpHostResult> {
    return pulumi.output(args).apply((a: any) => getDhcpHost(a, opts))
}

/**
 * A collection of arguments for invoking getDhcpHost.
 */
export interface GetDhcpHostOutputArgs {
    /**
     * Name of the section. This name is only used when interacting with UCI directly.
     */
    id: pulumi.Input<string>;
}
