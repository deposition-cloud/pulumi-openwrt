// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * A physical or virtual "device" in OpenWrt jargon. Commonly referred to as an "interface" in other networking jargon.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openwrt from "@pulumi/openwrt";
 *
 * const brTesting = openwrt.getNetworkDevice({
 *     id: "br_testing",
 * });
 * ```
 */
export function getNetworkDevice(args: GetNetworkDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkDeviceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("openwrt:index/getNetworkDevice:getNetworkDevice", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkDevice.
 */
export interface GetNetworkDeviceArgs {
    /**
     * Name of the section. This name is only used when interacting with UCI directly.
     */
    id: string;
}

/**
 * A collection of values returned by getNetworkDevice.
 */
export interface GetNetworkDeviceResult {
    /**
     * Bring up the bridge device even if no ports are attached
     */
    readonly bridgeEmpty: boolean;
    /**
     * Amount of Duplicate Address Detection probes to send
     */
    readonly dadtransmits: number;
    /**
     * Name of the section. This name is only used when interacting with UCI directly.
     */
    readonly id: string;
    /**
     * Enable IPv6 for the device.
     */
    readonly ipv6: boolean;
    /**
     * MAC Address of the device.
     */
    readonly macaddr: string;
    /**
     * Maximum Transmissible Unit.
     */
    readonly mtu: number;
    /**
     * Maximum Transmissible Unit for IPv6.
     */
    readonly mtu6: number;
    /**
     * Name of the device. This name is referenced in other network configuration.
     */
    readonly name: string;
    /**
     * Specifies the wired ports to attach to this bridge.
     */
    readonly ports: string[];
    /**
     * Transmission queue length.
     */
    readonly txqueuelen: number;
    /**
     * The type of device. Currently, only "bridge" is supported.
     */
    readonly type: string;
}
/**
 * A physical or virtual "device" in OpenWrt jargon. Commonly referred to as an "interface" in other networking jargon.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openwrt from "@pulumi/openwrt";
 *
 * const brTesting = openwrt.getNetworkDevice({
 *     id: "br_testing",
 * });
 * ```
 */
export function getNetworkDeviceOutput(args: GetNetworkDeviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkDeviceResult> {
    return pulumi.output(args).apply((a: any) => getNetworkDevice(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkDevice.
 */
export interface GetNetworkDeviceOutputArgs {
    /**
     * Name of the section. This name is only used when interacting with UCI directly.
     */
    id: pulumi.Input<string>;
}
