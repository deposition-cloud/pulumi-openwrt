// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Legacy `swconfig` configuration
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openwrt from "@pulumi/openwrt";
 *
 * const testing = openwrt.getNetworkSwitch({
 *     id: "testing",
 * });
 * ```
 */
export function getNetworkSwitch(args: GetNetworkSwitchArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkSwitchResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("openwrt:index/getNetworkSwitch:getNetworkSwitch", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkSwitch.
 */
export interface GetNetworkSwitchArgs {
    /**
     * Name of the section. This name is only used when interacting with UCI directly.
     */
    id: string;
}

/**
 * A collection of values returned by getNetworkSwitch.
 */
export interface GetNetworkSwitchResult {
    /**
     * Mirror received packets from the `mirrorSourcePort` to the `mirrorMonitorPort`.
     */
    readonly enableMirrorRx: boolean;
    /**
     * Mirror transmitted packets from the `mirrorSourcePort` to the `mirrorMonitorPort`.
     */
    readonly enableMirrorTx: boolean;
    /**
     * Enables VLAN functionality.
     */
    readonly enableVlan: boolean;
    /**
     * Name of the section. This name is only used when interacting with UCI directly.
     */
    readonly id: string;
    /**
     * Switch port to which packets are mirrored.
     */
    readonly mirrorMonitorPort: number;
    /**
     * Switch port from which packets are mirrored.
     */
    readonly mirrorSourcePort: number;
    readonly name: string;
    /**
     * Reset the switch.
     */
    readonly reset: boolean;
}
/**
 * Legacy `swconfig` configuration
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openwrt from "@pulumi/openwrt";
 *
 * const testing = openwrt.getNetworkSwitch({
 *     id: "testing",
 * });
 * ```
 */
export function getNetworkSwitchOutput(args: GetNetworkSwitchOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkSwitchResult> {
    return pulumi.output(args).apply((a: any) => getNetworkSwitch(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkSwitch.
 */
export interface GetNetworkSwitchOutputArgs {
    /**
     * Name of the section. This name is only used when interacting with UCI directly.
     */
    id: pulumi.Input<string>;
}
