// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The physical radio device.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openwrt from "@pulumi/openwrt";
 *
 * const testing = openwrt.getWirelessWifiDevice({
 *     id: "testing",
 * });
 * ```
 */
export function getWirelessWifiDevice(args: GetWirelessWifiDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetWirelessWifiDeviceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("openwrt:index/getWirelessWifiDevice:getWirelessWifiDevice", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getWirelessWifiDevice.
 */
export interface GetWirelessWifiDeviceArgs {
    /**
     * Name of the section. This name is only used when interacting with UCI directly.
     */
    id: string;
}

/**
 * A collection of values returned by getWirelessWifiDevice.
 */
export interface GetWirelessWifiDeviceResult {
    /**
     * Channel width. Must be one of: "2g", "5g", "6g".
     */
    readonly band: string;
    /**
     * Configures data rates based on the coverage cell density. Must be one of 0, 1, 2, 3.
     */
    readonly cellDensity: number;
    /**
     * The wireless channel. Currently, only "auto" is supported.
     */
    readonly channel: string;
    /**
     * Two-digit country code. E.g. "US".
     */
    readonly country: string;
    /**
     * Channel width. Must be one of: "HE20", "HE40", "HE80", "HE160", "HT20", "HT40", "HT40-", "HT40+", "NONE", "VHT20", "VHT40", "VHT80", "VHT160".
     */
    readonly htmode: string;
    /**
     * Name of the section. This name is only used when interacting with UCI directly.
     */
    readonly id: string;
    /**
     * Path of the device in `/sys/devices`.
     */
    readonly path: string;
    /**
     * The type of device. Currently only "mac80211" is supported.
     */
    readonly type: string;
}
/**
 * The physical radio device.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openwrt from "@pulumi/openwrt";
 *
 * const testing = openwrt.getWirelessWifiDevice({
 *     id: "testing",
 * });
 * ```
 */
export function getWirelessWifiDeviceOutput(args: GetWirelessWifiDeviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWirelessWifiDeviceResult> {
    return pulumi.output(args).apply((a: any) => getWirelessWifiDevice(a, opts))
}

/**
 * A collection of arguments for invoking getWirelessWifiDevice.
 */
export interface GetWirelessWifiDeviceOutputArgs {
    /**
     * Name of the section. This name is only used when interacting with UCI directly.
     */
    id: pulumi.Input<string>;
}
