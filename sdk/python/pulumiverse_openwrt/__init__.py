# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .dhcp_dhcp import *
from .dhcp_dnsmasq import *
from .dhcp_domain import *
from .dhcp_host import *
from .dhcp_odhcpd import *
from .get_dhcp_dhcp import *
from .get_dhcp_dnsmasq import *
from .get_dhcp_domain import *
from .get_dhcp_host import *
from .get_dhcp_odhcpd import *
from .get_network_device import *
from .get_network_globals import *
from .get_network_interface import *
from .get_network_switch import *
from .get_network_switch_vlan import *
from .get_system_system import *
from .get_wireless_wifi_device import *
from .get_wireless_wifi_iface import *
from .network_device import *
from .network_globals import *
from .network_interface import *
from .network_switch import *
from .network_switch_vlan import *
from .provider import *
from .system_system import *
from .wireless_wifi_device import *
from .wireless_wifi_iface import *

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumiverse_openwrt.config as __config
    config = __config
else:
    config = _utilities.lazy_import('pulumiverse_openwrt.config')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "openwrt",
  "mod": "index/dhcpDhcp",
  "fqn": "pulumiverse_openwrt",
  "classes": {
   "openwrt:index/dhcpDhcp:DhcpDhcp": "DhcpDhcp"
  }
 },
 {
  "pkg": "openwrt",
  "mod": "index/dhcpDnsmasq",
  "fqn": "pulumiverse_openwrt",
  "classes": {
   "openwrt:index/dhcpDnsmasq:DhcpDnsmasq": "DhcpDnsmasq"
  }
 },
 {
  "pkg": "openwrt",
  "mod": "index/dhcpDomain",
  "fqn": "pulumiverse_openwrt",
  "classes": {
   "openwrt:index/dhcpDomain:DhcpDomain": "DhcpDomain"
  }
 },
 {
  "pkg": "openwrt",
  "mod": "index/dhcpHost",
  "fqn": "pulumiverse_openwrt",
  "classes": {
   "openwrt:index/dhcpHost:DhcpHost": "DhcpHost"
  }
 },
 {
  "pkg": "openwrt",
  "mod": "index/dhcpOdhcpd",
  "fqn": "pulumiverse_openwrt",
  "classes": {
   "openwrt:index/dhcpOdhcpd:DhcpOdhcpd": "DhcpOdhcpd"
  }
 },
 {
  "pkg": "openwrt",
  "mod": "index/networkDevice",
  "fqn": "pulumiverse_openwrt",
  "classes": {
   "openwrt:index/networkDevice:NetworkDevice": "NetworkDevice"
  }
 },
 {
  "pkg": "openwrt",
  "mod": "index/networkGlobals",
  "fqn": "pulumiverse_openwrt",
  "classes": {
   "openwrt:index/networkGlobals:NetworkGlobals": "NetworkGlobals"
  }
 },
 {
  "pkg": "openwrt",
  "mod": "index/networkInterface",
  "fqn": "pulumiverse_openwrt",
  "classes": {
   "openwrt:index/networkInterface:NetworkInterface": "NetworkInterface"
  }
 },
 {
  "pkg": "openwrt",
  "mod": "index/networkSwitch",
  "fqn": "pulumiverse_openwrt",
  "classes": {
   "openwrt:index/networkSwitch:NetworkSwitch": "NetworkSwitch"
  }
 },
 {
  "pkg": "openwrt",
  "mod": "index/networkSwitchVlan",
  "fqn": "pulumiverse_openwrt",
  "classes": {
   "openwrt:index/networkSwitchVlan:NetworkSwitchVlan": "NetworkSwitchVlan"
  }
 },
 {
  "pkg": "openwrt",
  "mod": "index/systemSystem",
  "fqn": "pulumiverse_openwrt",
  "classes": {
   "openwrt:index/systemSystem:SystemSystem": "SystemSystem"
  }
 },
 {
  "pkg": "openwrt",
  "mod": "index/wirelessWifiDevice",
  "fqn": "pulumiverse_openwrt",
  "classes": {
   "openwrt:index/wirelessWifiDevice:WirelessWifiDevice": "WirelessWifiDevice"
  }
 },
 {
  "pkg": "openwrt",
  "mod": "index/wirelessWifiIface",
  "fqn": "pulumiverse_openwrt",
  "classes": {
   "openwrt:index/wirelessWifiIface:WirelessWifiIface": "WirelessWifiIface"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "openwrt",
  "token": "pulumi:providers:openwrt",
  "fqn": "pulumiverse_openwrt",
  "class": "Provider"
 }
]
"""
)
